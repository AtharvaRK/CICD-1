pipeline {
    agent any

    parameters {
        string(name: 'Git', defaultValue: 'https://github.com/AtharvaRK/devop-ud1', description: 'Enter your git Url')
        string(name: 'tag', defaultValue: '08042024')
    }
    

    stages {

        stage('Clean Folder') {
            steps {
                cleanWs()
                sh 'pwd'
                git branch: 'main', url: "${params.Git}"
               
            }
        }
        
        stage('Hello') {
            steps {
                sh 'docker ps'
            }
        }
        
        stage('SonarQube Analysis') {
            steps{
                script{
                    def scannerHome = tool 'sonar';
                    withSonarQubeEnv(installationName:'sonar') {
                        sh "${scannerHome}/bin/sonar-scanner \
                        -Dsonar.projectKey=test "
                    }
                }
            }
        }
        
        stage('QG') {
            steps {
                waitForQualityGate abortPipeline: false, credentialsId: 'sonar'
            }
        }
        

        stage('Docker') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred') {
                        sh'docker build -t arkyy21/jenk1:${tag} .'
                        sh'docker push arkyy21/jenk1:${tag} '
                        sh'docker rmi arkyy21/jenk1:${tag} '
                    }
                }
            }
        }
        
        stage('FS SCAN') {
            steps {
                sh'docker run --name=fsscan aquasec/trivy fs . > fs.txt'
                sh'docker run --name=imscan aquasec/trivy image arkyy21/jenk1:${tag} > image.txt'
                sh'docker rm fcscan'
                sh'docker rm imscan'
            }
        }
        
        stage('FS SCAN send') {
            steps {
                emailext attachmentsPattern: 'fs.txt', body: '', subject: 'Jenkins Scan Result', to: 'arkyyy21@gmail.com'
            }
        }
        
        
       
    }
    
}
